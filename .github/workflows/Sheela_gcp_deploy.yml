name: Create VM Image

on:
  push:
    branches:
      - Sheela-deployment  # Try 4

env:
  PROJECT_ID: iconic-vine-438222-u6
  IMAGE_NAME: bank-marketing-mlops-image
  IMAGE_FAMILY: bank-marketing-mlops-family
  IMAGE_DESCRIPTION: "Image for Bank Marketing MLOps App"
  INSTANCE_TEMPLATE_NAME: bank-marketing-template
  ZONE: us-central1-a
  SOURCE_INSTANCE: bank-marketing-prediction-mlops-vm-instance
  STARTUP_SCRIPT_PATH: gcpdeploy/startup-script.sh
  SETUP_SCRIPT_PATH: gcpdeploy/setup.sh
  APP_FILE_PATH: gcpdeploy/app.py  
  GCS_MODEL_PATH: gs://mlopsprojectdatabucketgrp6/models/best_random_forest_model/model.pkl  # Updated model path

jobs:
  create-vm-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Validate File Paths
        run: |
          echo "Validating script paths..."
          ls -lh ./${{ env.STARTUP_SCRIPT_PATH }}
          ls -lh ./${{ env.SETUP_SCRIPT_PATH }}
          ls -lh ./${{ env.APP_FILE_PATH }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: gcloud

      - name: Prepare Target Directory on VM
        run: |
          echo "Preparing target directory on VM..."
          gcloud compute ssh ${{ env.SOURCE_INSTANCE }} --zone=${{ env.ZONE }} --command="sudo mkdir -p /home/$USER && sudo chmod -R 755 /home/$USER"

      - name: Copy Scripts and App to Instance
        run: |
          echo "Extracting file names..."
          SETUP_SCRIPT_FILE=$(basename "${{ env.SETUP_SCRIPT_PATH }}")
          STARTUP_SCRIPT_FILE=$(basename "${{ env.STARTUP_SCRIPT_PATH }}")
          APP_FILE=$(basename "${{ env.APP_FILE_PATH }}")

          echo "Copying setup.sh..."
          gcloud compute scp ./${{ env.SETUP_SCRIPT_PATH }} ${{ env.SOURCE_INSTANCE }}:/home/$USER/$SETUP_SCRIPT_FILE --zone=${{ env.ZONE }} || { echo "Failed to copy setup.sh. Exiting."; exit 1; }

          echo "Copying startup-script.sh..."
          gcloud compute scp ./${{ env.STARTUP_SCRIPT_PATH }} ${{ env.SOURCE_INSTANCE }}:/home/$USER/$STARTUP_SCRIPT_FILE --zone=${{ env.ZONE }} || { echo "Failed to copy startup-script.sh. Exiting."; exit 1; }

          echo "Copying app.py..."
          gcloud compute scp ./${{ env.APP_FILE_PATH }} ${{ env.SOURCE_INSTANCE }}:/home/$USER/$APP_FILE --zone=${{ env.ZONE }} || { echo "Failed to copy app.py. Exiting."; exit 1; }

      - name: Download Model from GCS
        run: |
          echo "Downloading model file from GCS..."
          gcloud compute ssh ${{ env.SOURCE_INSTANCE }} --zone=${{ env.ZONE }} --command="
            gsutil cp ${{ env.GCS_MODEL_PATH }} /home/$USER/$(basename ${{ env.GCS_MODEL_PATH }}) &&
            echo 'Model downloaded successfully!'
          "

      - name: Validate Files on VM
        run: |
          echo "Validating files on the VM..."
          gcloud compute ssh ${{ env.SOURCE_INSTANCE }} --zone=${{ env.ZONE }} --command="
            ls -lh /home/$USER/$(basename ${{ env.SETUP_SCRIPT_PATH }}) &&
            ls -lh /home/$USER/$(basename ${{ env.STARTUP_SCRIPT_PATH }}) &&
            ls -lh /home/$USER/$(basename ${{ env.APP_FILE_PATH }}) &&
            ls -lh /home/$USER/$(basename ${{ env.GCS_MODEL_PATH }})
          "

      - name: Stop VM for Image Creation
        run: |
          echo "Stopping the source VM to prepare for image creation..."
          gcloud compute instances stop ${{ env.SOURCE_INSTANCE }} --zone=${{ env.ZONE }}

      - name: Create VM Image
        run: |
          echo "Creating a new VM image..."
          gcloud compute images create ${{ env.IMAGE_NAME }} \
            --source-disk=${{ env.SOURCE_INSTANCE }} \
            --source-disk-zone=${{ env.ZONE }} \
            --family=${{ env.IMAGE_FAMILY }} \
            --description="${{ env.IMAGE_DESCRIPTION }}" \
            --force

      - name: Start VM after Image Creation
        run: |
          echo "Starting the source VM after image creation..."
          gcloud compute instances start ${{ env.SOURCE_INSTANCE }} --zone=${{ env.ZONE }}
