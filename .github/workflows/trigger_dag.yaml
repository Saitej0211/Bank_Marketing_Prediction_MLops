name: Bank Marketing MLOps CI/CD

on:
  push:
    branches:
      - Sheela-ci_cd
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight
  workflow_dispatch:

env:
  REGION: us-east4
  REPOSITORY_NAME: bank_marketing_prediction_mlops
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  IMAGE_NAME: "ml-model-image"
  GCS_BUCKET_NAME: "mlopsprojectdatabucketgrp6"

jobs:
  model_pipeline:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 3: Authenticate with GCP
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Set GCP project ID
        run: gcloud config set project ${{ env.GCP_PROJECT_ID }}

      # Step 4: Clean up Docker resources to free up space
      - name: Clean up Docker
        run: docker system prune -af --volumes

      # Step 5: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 6: Build and Push Docker Image
      - name: Build and Push Docker Image
        env:
          REGISTRY: "us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ml-models"
        run: |
          docker build -f Dockerfilemodel -t $REGISTRY/$IMAGE_NAME:${{ github.sha }} .
          docker push $REGISTRY/$IMAGE_NAME:${{ github.sha }}
          docker tag $REGISTRY/$IMAGE_NAME:${{ github.sha }} $REGISTRY/$IMAGE_NAME:latest
          docker push $REGISTRY/$IMAGE_NAME:latest

      # Step 7: Upload Model to GCS
      - name: Upload Model to GCS
        run: |
          gsutil cp model.pkl gs://${{ env.GCS_BUCKET_NAME }}/models/model-${{ github.sha }}.pkl

      # Step 8: Deploy Model to AI Platform
      - name: Deploy Model to AI Platform
        run: |
          gcloud ai models upload \
            --region=${{ env.REGION }} \
            --display-name=bank-marketing-model-${{ github.sha }} \
            --artifact-uri=gs://${{ env.GCS_BUCKET_NAME }}/models/model-${{ github.sha }}.pkl

      # Step 9: Notify on Success
      - name: Deployment Success
        if: success()
        run: echo "CI/CD pipeline completed successfully. Model uploaded and services started."

      # Step 10: Notify on Failure
      - name: Deployment Failure
        if: failure()
        run: echo "CI/CD pipeline failed. Check the logs for details."

